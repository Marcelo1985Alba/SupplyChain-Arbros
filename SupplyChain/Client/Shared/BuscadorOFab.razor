@inject HttpClient Http
@using Syncfusion.Blazor.Buttons
<div class="form-row">
    <div class="col-10">
        <SfNumericTextBox @bind-Value="@Valor" ShowClearButton="true" TValue="int" Format="n0"
                          Decimals="0" ShowSpinButton="@MostrarSpin" Readonly="@EsSoloLectura">

        </SfNumericTextBox>
    </div>
    <div class="col-2">
        
        @if (MostraBotonBusqueda)
        {
            <SfButton HtmlAttributes="@HtmlAttribute" OnClick="@(async (e)=> await BuscarOF())" 
                      CssClass="e-smal e-round e-info" IsPrimary="false"
                      IconCss="fa fa-search" Disabled="@DeshabilitaBotonBusqueda"></SfButton>
        }
    </div>

</div>

<BuscadorEmergente @ref="Buscador" TItem="Programa" DataSource="ItemsABuscar" Columnas="ColumnasBuscador" 
                   Titulo="@TituloBuscador"
                   OnObjetoSeleccionado="@(async(o)=> await EnviarObjetoSeleccionado(o))" />

@code {
    BuscadorEmergente<Programa> Buscador;
    [Parameter] public int Valor { get; set; } = 0;
    [Parameter] public bool EsSoloLectura { get; set; } = false;
    [Parameter] public bool MostraBotonBusqueda { get; set; } = true;
    [Parameter] public bool DeshabilitaBotonBusqueda { get; set; } = true;
    [Parameter] public bool MostrarSpin { get; set; } = true;
    [Parameter] public Dictionary<string, object> HtmlAttribute { get; set; } = new Dictionary<string, object>();
    [Parameter] public EventCallback<Programa> OnOFSeleccionada { get; set; }
    private Programa[] ItemsABuscar = null;
    private string[] ColumnasBuscador = new string[] { "CG_ORDF", "FE_EMIT", "CG_PROD", "CANT",
        "DES_PROD", "PEDIDO", "CG_CLI","DES_CLI" };
    private string TituloBuscador = "Listado de Ordenes de Fabricacion Planeadas";
    private bool PopupBuscadorVisible = false;

    private async Task BuscarOF()
    {
        await Buscador.ShowAsync();
        //ItemsABuscar = await Http.GetFromJsonAsync<Programa[]>("api/Programas");
        ItemsABuscar = await Http.GetFromJsonAsync<Programa[]>("api/Programa/GetPlaneadas");
        await InvokeAsync(StateHasChanged);
    }

    public async Task EnviarObjetoSeleccionado(Programa ordfab)
    {
        await Buscador.HideAsync();
        var of = (Programa)ordfab;
        await OnOFSeleccionada.InvokeAsync(of);
    }

}
