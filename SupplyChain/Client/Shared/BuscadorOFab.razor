@using Syncfusion.Blazor.Buttons
@inject HttpClient Http
<div class="form-row">
    <div class="col-8">
        <SfNumericTextBox @bind-Value="@Valor" ShowClearButton="true" TValue="int" Format="n0" ID="numOfab"
                          Decimals="0" ShowSpinButton="@MostrarSpin" Readonly="@EsSoloLectura">

        </SfNumericTextBox>
    </div>
    <div class="col-4 mb-1">

        @if (MostraBotonBusqueda)
        {
            <SfButton OnClick="@(async e => await BuscarOF())"
                      CssClass="e-smal e-round e-info buscador" IsPrimary="false"
                      IconCss="fa fa-search" HtmlAttributes="@HtmlAttribute" Disabled="@DeshabilitaBotonBusqueda">
            </SfButton>
        }
    </div>

</div>
<BuscadorEmergente @ref="Buscador" TItem="Programa" DataSource="ItemsABuscar" Columnas="ColumnasBuscador"
                   Titulo="@TituloBuscador"
                   OnObjetoSeleccionado="@(async o => await EnviarObjetoSeleccionado(o))"/>


@code {
    BuscadorEmergente<Programa> Buscador;

    [Parameter]
    public int Valor { get; set; } = 0;

    [Parameter]
    public bool EsSoloLectura { get; set; } = false;

    [Parameter]
    public bool MostraBotonBusqueda { get; set; } = true;

    [Parameter]
    public bool DeshabilitaBotonBusqueda { get; set; } = true;

    [Parameter]
    public bool MostrarSpin { get; set; } = true;

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> HtmlAttribute { get; set; } = new();

    [Parameter]
    public EventCallback<Programa> OnOFSeleccionada { get; set; }

    private Programa[] ItemsABuscar = null;

    private string[] ColumnasBuscador =
    {
        "CG_ORDF", "FE_EMIT", "CG_PROD", "CANT",
        "DES_PROD", "PEDIDO", "CG_CLI", "DES_CLI"
    };

    private string TituloBuscador = "Listado de Ordenes de Fabricacion Planeadas";
    private bool PopupBuscadorVisible = false;

    private async Task BuscarOF()
    {
        PopupBuscadorVisible = true;
        await Buscador.ShowAsync();
    //ItemsABuscar = await Http.GetFromJsonAsync<Programa[]>("api/Programas");
        ItemsABuscar = await Http.GetFromJsonAsync<Programa[]>("api/Programa/GetPlaneadas");
        await InvokeAsync(StateHasChanged);
    }

    public async Task EnviarObjetoSeleccionado(Programa ordfab)
    {
        PopupBuscadorVisible = false;
        await Buscador.HideAsync();
        var of = ordfab;
        await OnOFSeleccionada.InvokeAsync(of);
    }


}

<style>
    input[class*="e-numerictextbox"] {
        width: 200px;
        height: 20px;
        padding-right: 50px;
        background-color:red;
    }
    #numOfab{
    /*background: none;
        color: inherit;*/
    width: 200px;
    height: 20px;
    padding-right: 50px;
    /*background-color: red;*/
    }



    .buscador {
        margin-left: -30px;
        height: 25px;
        width: 50px;
        /*background: blue;*/
        color: white;
        border: 0;
        -webkit-appearance: none;
        margin-bottom: 40px;
    }
</style>