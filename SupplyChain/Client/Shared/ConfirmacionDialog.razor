
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Buttons



<SfDialog Width="450px" ShowCloseIcon="true" IsModal="true" @bind-Visible="@IsVisible">
    <DialogTemplates>
        <Header> @HeaderTempalte </Header>
        <Content> @ContentTemplate </Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton Content="@ContentButtonConfirm" IsPrimary="true" OnClick="@(async()=> await Confirm())" />
        @if (MontrarOtroButton)
        {
            <DialogButton Content="@ContentButtonConfirmTwo" CssClass="e-success"
                          IsPrimary="false" OnClick="@(async()=> await ConfirmTwo())" />
        }
        
        <DialogButton Content="@ContentButtonCancel" OnClick="@(async()=> await HideAsync())" />
    </DialogButtons>
</SfDialog>

@code {
    [Parameter] public RenderFragment HeaderTempalte { get; set; }
    [Parameter] public RenderFragment ContentTemplate { get; set; }
    [Parameter] public EventCallback OnConfirm { get; set; }
    [Parameter] public string ContentButtonConfirm { get; set; } = "Si";
    [Parameter] public string ContentButtonCancel { get; set; } = "No";
    [Parameter] public string ContentButtonConfirmTwo { get; set; } = "Otro";
    [Parameter] public bool MontrarOtroButton { get; set; } = false;
    [Parameter] public EventCallback OnConfirmTwo { get; set; }
    private bool IsVisible { get; set; } = false;

    public async Task ShowAsync()
    {
        this.IsVisible = true;
        await InvokeAsync(StateHasChanged);
    }

    public async Task HideAsync()
    {
        this.IsVisible = false;
        //if (OnCancel.HasDelegate)
        //{
        //    await OnCancel.InvokeAsync();
        //}

    }

    private async Task Confirm()
    {
        await OnConfirm.InvokeAsync();
    }

    private async Task ConfirmTwo()
    {
        if (OnConfirmTwo.HasDelegate)
        {
            await OnConfirmTwo.InvokeAsync();
        }

    }


}