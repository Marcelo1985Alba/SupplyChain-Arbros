@inject HttpClient Http
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Data
@*<ComboGenerico TItem="Tire" PlaceHolder="Seleccione tipo de operacion..."
               DataSource="@TiposOperacion" ValueId="Tipoo" ValueText="Descrip"
               OnSelectedChanged="OnSelectedTireChanged">
</ComboGenerico>*@

<SfDropDownList TValue="int" TItem="Tire" Placeholder="Seleccione tipo de operacion..." DataSource="@TiposOperacion"
                @bind-Value="TipooSeleccionado">
    @*<SfDataManager Url="api/Deposito" Adaptor="Syncfusion.Blazor.Adaptors.WebApiAdaptor" CrossDomain=false></SfDataManager>*@
    <DropDownListEvents TItem="Tire" TValue="int" ValueChange="SelectedTipooChanged"></DropDownListEvents>
    <DropDownListFieldSettings Text="Descrip" Value="Tipoo"></DropDownListFieldSettings>
</SfDropDownList>


@code {
    public List<Tire> TiposOperacion = new List<Tire>() {
        new Tire() { Tipoo = 21, Descrip = "Ajuste de Inventario" },
        new Tire() { Tipoo = 10, Descrip = "Entrega de insumos a una orden de fabricación" },
        new Tire() { Tipoo = 10, Descrip = "Devolución de insumos de una orden de fabricación" },
        //new Tire() { Tipoo = 28, Descrip = "Entrega de un insumo a una orden de armado planeada" },/*tipo 28 = order de armado y tipo 10  10 OF*/
        //new Tire() { Tipoo = 10, Descrip = "Entrega de insumos a una orden de fabricación firme o en curso" },
        //new Tire() { Tipoo = 28, Descrip = "Entrega de un insumo a una orden de armado firme o en curso" },
        //new Tire() { Tipoo = 2, Descrip = "Entrega de consumibles" }, /**/
        new Tire() { Tipoo = 5, Descrip = "Recepción de insumos de un proveedor" }, /*Tipo 5 Recepcion y tipo 6 devolucion: */
        new Tire() { Tipoo = 6, Descrip = "Devolución de insumos a un proveedor" },
        //new Tire() { Tipoo = 14, Descrip = "Envío de un insumo o producto a scrap" }, /*TIPO 14 ENTREGA A SCRAP TIPO 15 DESTRUCCION DE SCRAP(NO PROGRAMADO) TIPO 16 DEVOLUCION DE SCRAP*/
        //new Tire() { Tipoo = 15, Descrip = "Recuperación de un insumo o producto de scrap" },
        new Tire() { Tipoo = 9, Descrip = "Movimientos entre depósitos" }, /*TIPO 9*/
        new Tire() { Tipoo = 1, Descrip = "Remito a un cliente con y sin pedido" } /*TIPO 1*/
        //new Tire() { Tipoo = 1, Descrip = "Devolución de un cliente con y sin pedido" }
    };

    [Parameter] public int TipooSeleccionado { get; set; }
    [Parameter] public EventCallback<Tire> OnSelectedTireChanged { get; set; }
    [Parameter] public int TipoOperacionIdUnico { get; set; } = 0;


    protected void CargarTiposOperacion()
    {
        TiposOperacion = new List<Tire>() {
        new Tire() { Tipoo = 21, Descrip = "Ajuste de Inventario" },
        new Tire() { Tipoo = 10, Descrip = "Entrega de insumos a una orden de fabricación" },
        new Tire() { Tipoo = 10, Descrip = "Devolución de insumos de una orden de fabricación" },
        //new Tire() { Tipoo = 28, Descrip = "Entrega de un insumo a una orden de armado planeada" },/*tipo 28 = order de armado y tipo 10  10 OF*/
        //new Tire() { Tipoo = 10, Descrip = "Entrega de insumos a una orden de fabricación firme o en curso" },
        //new Tire() { Tipoo = 28, Descrip = "Entrega de un insumo a una orden de armado firme o en curso" },
        //new Tire() { Tipoo = 2, Descrip = "Entrega de consumibles" }, /**/
        new Tire() { Tipoo = 5, Descrip = "Recepción de insumos de un proveedor" }, /*Tipo 5 Recepcion y tipo 6 devolucion: */
        new Tire() { Tipoo = 6, Descrip = "Devolución de insumos a un proveedor" },
        //new Tire() { Tipoo = 14, Descrip = "Envío de un insumo o producto a scrap" }, /*TIPO 14 ENTREGA A SCRAP TIPO 15 DESTRUCCION DE SCRAP(NO PROGRAMADO) TIPO 16 DEVOLUCION DE SCRAP*/
        //new Tire() { Tipoo = 15, Descrip = "Recuperación de un insumo o producto de scrap" },
        new Tire() { Tipoo = 9, Descrip = "Movimientos entre depósitos" }, /*TIPO 9*/
        new Tire() { Tipoo = 1, Descrip = "Remito a un cliente con y sin pedido" } /*TIPO 1*/
        //new Tire() { Tipoo = 1, Descrip = "Devolución de un cliente con y sin pedido" }
    };

    }

    protected override async Task OnInitializedAsync()
    {

        if (TipoOperacionIdUnico > 0)
        {
            CargarTiposOperacion();
            TiposOperacion = TiposOperacion.Where(o => o.Tipoo == TipoOperacionIdUnico).ToList();
        }

        await InvokeAsync(StateHasChanged);
    }

    protected override void OnAfterRender(bool firstRender)
    {

        if (firstRender)
        {
            if (TipoOperacionIdUnico > 0)
            {
                CargarTiposOperacion();
                TiposOperacion = TiposOperacion.Where(o => o.Tipoo == TipoOperacionIdUnico).ToList();
            }
        }

    }

    private void SelectedTipooChanged(Syncfusion.Blazor.DropDowns.ChangeEventArgs<int, Tire> args)
    {
        TipooSeleccionado = args.ItemData.Tipoo;
        OnSelectedTireChanged.InvokeAsync(args.ItemData);
        InvokeAsync(StateHasChanged);
    }

}
