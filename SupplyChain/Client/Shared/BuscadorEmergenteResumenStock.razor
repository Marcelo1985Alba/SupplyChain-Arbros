@inject HttpClient Http

<SfDialog Height="85%" Width="90%" Target="#target" ShowCloseIcon="true" @bind-Visible="Visible" IsModal="true">
    <DialogTemplates>
        <Header>
            @Titulo
        </Header>
        <Content>
            <div class="dialogContent">
                @if (DataSource == null)
                {
                    <span>Cargando...</span>
                }
                else
                {
                    if (DataSource.Length == 0)
                    {
                        <span class="text-muted">Sin Datos</span>
                    }
                    else
                    {
                        <SfGrid @ref="@Grid" DataSource="@DataSource" AllowPaging="true" AllowFiltering="true" TValue="vResumenStock"
                                AllowResizing="true" GridLines="GridLine.Both" Height="320" Width="100%"
                                AllowSelection="true" AllowSorting="true" AllowTextWrap="true" EnableHover="true"
                                ShowColumnMenu="true">
                            <GridPageSettings PageSizes="@(new int[] { 5,10,20 })" PageSize="20" PageCount="5"></GridPageSettings>
                            <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Single"></GridSelectionSettings>
                            <GridEvents RowSelected="@(async(a)=> await GetSelectedRecords(a))" TValue="vResumenStock"></GridEvents>
                            <GridColumns>

                                <GridColumn Field="@nameof(vResumenStock.CG_ART)" Width="120px"></GridColumn>
                                <GridColumn Field="@nameof(vResumenStock.PRODUCTO)" Width="120px"></GridColumn>
                                <GridColumn Field="@nameof(vResumenStock.STOCK)"></GridColumn>
                                <GridColumn Field="@nameof(vResumenStock.CG_DEP)"></GridColumn>
                                <GridColumn Field="@nameof(vResumenStock.DEPOSITO)"></GridColumn>
                                <GridColumn Field="@nameof(vResumenStock.SERIE)"></GridColumn>
                                <GridColumn Field="@nameof(vResumenStock.LOTE)" IsPrimaryKey="true"></GridColumn>
                                <GridColumn Field="@nameof(vResumenStock.DESPACHO)"></GridColumn>

                            </GridColumns>
                        </SfGrid>
                    }
                }
            </div>
        </Content>
        <FooterTemplate>
            @*<SfTextBox ID="inVal" @bind-Value="@TextBoxValue" @ref="TextboxObj" Type="InputType.Text" Placeholder="Enter your message here!" />*@
            <button id="sendButton" @onclick="@(async ()=> await EnviarObjetoSeleccionado())" class="e-control e-btn e-primary" data-ripple="true">Aceptar</button>
        </FooterTemplate>
    </DialogTemplates>
    @*<DialogEvents OnOpen="@BeforeDialogOpen" Closed="@DialogClosed"></DialogEvents>*@
</SfDialog>

@code {
    SfGrid<vResumenStock> Grid;

    [Parameter] public vResumenStock[] DataSource { get; set; } = null!;
    [Parameter] public string Titulo { get; set; } = null!;
    [Parameter] public bool Visible { get; set; } = false;
    [Parameter] public string[] Columnas { get; set; } = null!;
    [Parameter] public EventCallback<vResumenStock> OnObjetoSeleccionado { get; set; }


    public vResumenStock Selected { get; set; }

    //protected async override Task OnInitializedAsync()
    //{
    //    DataSource = await Http.GetFromJsonAsync<ResumenStock[]>($"api/ResumenStock/ByCodigo/{cg_art}");

    //    await InvokeAsync(StateHasChanged);
    //}


    public async Task ShowAsync()
    {
        Visible = true;
    }
    public async Task HideAsync()
    {
        Visible = false;
    }

    public async Task EnviarObjetoSeleccionado()
    {
        Visible = false;
        await OnObjetoSeleccionado.InvokeAsync(Selected);
    }

    public async Task GetSelectedRecords(RowSelectEventArgs<vResumenStock> args)
    {
        args.PreventRender = true; //without this, you may see noticable delay in selection with 75 rows in grid
        //ListaSeleccionada = await this.Grid.GetSelectedRecords();
        Selected = args.Data;
        await InvokeAsync(StateHasChanged);
    }
}
