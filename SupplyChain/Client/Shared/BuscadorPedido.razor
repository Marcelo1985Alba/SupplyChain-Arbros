@inject HttpClient Http
@using Syncfusion.Blazor.Buttons
<div class="form-row">
    <div class="col-10">
        <SfNumericTextBox @bind-Value="@Valor" ShowClearButton="true" TValue="int" Format="n0"
                          Decimals="0" ShowSpinButton="@MostrarSpin" Readonly="@EsSoloLectura"></SfNumericTextBox>
    </div>
    @if (MostraBotonBusqueda)
    {
        <div class="col-2 mb-1">


            <SfButton OnClick="@(async (e)=> await BuscarPedidos())" CssClass="e-smal e-round e-info"
                      IsPrimary="false" HtmlAttributes="@HtmlAttr"
                      IconCss="fa fa-search" Disabled="@HabilitaBotonBusqueda"></SfButton>
            
        </div>
    }
    </div>

<BuscadorEmergente @ref="Buscador" TItem="Pedidos" DataSource="@ItemsABuscar" Columnas="@ColumnasBuscador" 
                   Titulo="@TituloBuscador" Height="85%" OnObjetoSeleccionado="@(async(o)=> await EnviarObjetoSeleccionado(o))" />

@code {

    [Parameter] public int Valor { get; set; } = 0;
    [Parameter] public bool EsSoloLectura { get; set; } = false;
    [Parameter] public bool MostraBotonBusqueda { get; set; } = false;
    [Parameter] public bool HabilitaBotonBusqueda { get; set; } = true;
    [Parameter] public bool MostrarSpin { get; set; } = true;
    [Parameter] public EventCallback<Pedidos> OnOCSeleccionada { get; set; }
    [Parameter] public string[] ColumnasBuscador { get; set; }
    [Parameter] public string TituloBuscador { get; set; }
    [Parameter] public int TipoOperacion { get; set; }
    [Parameter] public Dictionary<string, object> HtmlAttr { get; set; } = new Dictionary<string, object>() { { "type", "button" } };
    private Pedidos[] ItemsABuscar = null;
    private bool PopupBuscadorVisible = false;
    private int CantRegistros = 0;
    private BuscadorEmergente<Pedidos> Buscador;

    private async Task BuscarPedidos()
    {
        CantRegistros += 100;
        SetTituloBuscador();
        ColumnasBuscador = new string[] { "VALE", "FE_MOV", "CG_ART", "DES_ART", "STOCK" };
        await Buscador.ShowAsync();
        ItemsABuscar = await Http.GetFromJsonAsync<Pedidos[]>($"api/Stock/GetValesByTipo/{TipoOperacion}/{CantRegistros}");
        await InvokeAsync(StateHasChanged);
    }


    private void SetTituloBuscador()
    {
        TituloBuscador = "Listado de Vales: ";
        if (TipoOperacion == 5)
        {
            TituloBuscador += "RECEPCION DE INSUMOS DE PROVEEDOR";
        }
        if (TipoOperacion == 10)
        {
            TituloBuscador += "ENTREGA A ORDEN DE FABRICACION";
        }
    }

    public async Task EnviarObjetoSeleccionado(Pedidos pedido)
    {
        var oc = (Pedidos)pedido;
        await Buscador.HideAsync();
        await OnOCSeleccionada.InvokeAsync(oc);
    }


}
