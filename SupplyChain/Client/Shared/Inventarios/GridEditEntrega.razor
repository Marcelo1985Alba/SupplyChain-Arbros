@using System.ComponentModel.DataAnnotations;
@using System.ComponentModel.DataAnnotations.Schema;
@using System.Text.Json
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Navigations

@inherits GridEditEntregaBase

@if (DataSource == null)
{

}
else
{
    <div class="col-lg-12 control-section">
        <div class="content-wrapper">
            <div class="row">
                <SfGrid @ref="@Grid" DataSource="@DataSource" AllowExcelExport="true" AllowPaging="true" ID="gridEditEntregaNewOF"
                        GridLines="GridLine.Both" Locale="es-Ar" Height="100%" Width="100%"
                        Toolbar="@Toolbaritems"
                        AllowResizing="true" AllowSelection="true" AllowSorting="true" AllowTextWrap="false"
                        AllowReordering="true" RowHeight="20">
                    <GridPageSettings PageCount="4" PageSize="50"></GridPageSettings>
                    <GridEvents OnActionBegin="@(async(p)=> await OnActionBeginHandler(p))"
                                OnBeginEdit="@(async (ped)=> await BeginEditHandler(ped))"
                                QueryCellInfo="@(async(e)=> await QueryCellInfoHandler(e))"
                                OnActionComplete="@(async(e)=> await OnActionComplete(e))" 
                                OnToolbarClick="@(async(e)=> await ClickHandler(e))"
                                TValue="Pedidos"></GridEvents>
                    <GridEditSettings AllowAdding="PermiteAgregar" AllowEditing="PermiteEditar" AllowDeleting="PermiteEliminar"
                                      Mode="EditMode.Dialog" Dialog="@DialogParams">
                        <HeaderTemplate>
                            <span>Detalle</span>
                        </HeaderTemplate>
                        <Template>
                            @{

                                stock = (context as Pedidos);
                                <hr />
                                <br />
                                <div class="form-row">
                                    <div class="form-group col-md-2">
                                        <label class="col-form-label">Codigo Producto :</label>
                                        <SfTextBox @bind-Value="@stock.CG_ART" Readonly="true"></SfTextBox>
                                        <ValidationMessage For="@(() => stock.CG_ART)"></ValidationMessage>
                                    </div>
                                    <div class="form-group col-md-4">
                                        <label class="col-form-label">Descripcion Producto :</label>
                                        <SfTextBox @bind-Value="@stock.DES_ART" Readonly="true"></SfTextBox>
                                        <ValidationMessage For="@(() => stock.DES_ART)"></ValidationMessage>
                                    </div>
                                    <div class="form-group col-md-1 mt-4">
                                        <SfButton HtmlAttributes="@HtmlAttribute" OnClick="@(async ()=> await Buscar())"
                                                  CssClass="e-round"
                                                  Content="" IconCss="fa fa-search" />
                                    </div>
                                    <div class="form-group col-md-2">
                                        <label class="col-form-label">Déposito Salida</label>
                                        <SfDropDownList TItem="Deposito" @bind-Value="@stock.CG_DEP" Readonly="true"
                                                        TValue="int" ID="CG_DEP" DataSource="@depositos">
                                            <DropDownListFieldSettings Text="DES_DEP" Value="CG_DEP">

                                            </DropDownListFieldSettings>
                                        </SfDropDownList>
                                    </div>
                                    <div class="form-group col-md-1">
                                        <label class="col-form-label">Stock:</label>
                                        <SfNumericTextBox ShowSpinButton="false" @bind-Value="@stock.ResumenStock.STOCK"
                                                          Readonly="true" />
                                    </div>
                                    <div class="form-group col-md-2">
                                        <label class="col-form-label">Stock - Entrega:</label>
                                        <SfNumericTextBox ShowSpinButton="false" @bind-Value="@stock.PENDIENTEOC" TValue="decimal?"
                                                          Readonly="true">
                                        </SfNumericTextBox>
                                    </div>

                                </div>
                                <div class="form-row">
                                    <div class="form-group col-md-2">
                                        <label class="col-form-label">Cantidad :</label>
                                        <SfNumericTextBox @bind-Value="@stock.STOCK" Decimals="2" @onchange="@CantChange"></SfNumericTextBox>
                                        <ValidationMessage For="@(() => stock.STOCK)"></ValidationMessage>
                                    </div>
                                    <div class="form-group col-md-1">
                                        <label class="col-form-label">Unidad :</label>
                                        <SfTextBox @bind-Value="@stock.UNID" Readonly="true"></SfTextBox>
                                        <ValidationMessage For="@(() => stock.UNID)"></ValidationMessage>
                                    </div>
                                    <div class="form-group col-md-3">
                                        <label class="col-form-label">Serie :</label>
                                        <SfTextBox @bind-Value="@stock.SERIE"></SfTextBox>
                                        <ValidationMessage For="@(() => stock.SERIE)"></ValidationMessage>
                                    </div>
                                    <div class="form-group col-md-3">
                                        <label class="col-form-label">Depacho :</label>
                                        <SfTextBox @bind-Value="@stock.DESPACHO" Readonly="true"></SfTextBox>
                                        <ValidationMessage For="@(() => stock.DESPACHO)"></ValidationMessage>
                                    </div>
                                    <div class="form-group col-md-3">
                                        <label class="col-form-label">Lote :</label>
                                        <SfTextBox @bind-Value="@stock.LOTE" Readonly="true"></SfTextBox>
                                        <ValidationMessage For="@(() => stock.LOTE)"></ValidationMessage>
                                    </div>

                                </div>


                            }
                        </Template>
                    </GridEditSettings>

                    <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Single"></GridSelectionSettings>
                    <GridColumns>
                        <GridColumn HeaderText="" Width="120">
                            <GridCommandColumns>
                                <GridCommandColumn Type="CommandButtonType.Edit" ButtonOption="@(new CommandButtonOptions() { IconCss = "e-icons e-edit", CssClass = "e-flat" })"></GridCommandColumn>
                                <GridCommandColumn Type="CommandButtonType.Delete" ButtonOption="@(new CommandButtonOptions() { IconCss = "e-icons e-delete", CssClass = "e-flat" })"></GridCommandColumn>
                            </GridCommandColumns>
                        </GridColumn>
                        <GridColumn Field="@nameof(Pedidos.CG_ART)" HeaderText="Cod. Producto" AutoFit="true" Width="130"></GridColumn>
                        <GridColumn Field="@nameof(Pedidos.DES_ART)" HeaderText="Desc. Producto" Width="180"></GridColumn>
                        <GridColumn Field="@nameof(Pedidos.STOCK)" HeaderText="Cant Entrega" EditType="EditType.NumericEdit" AutoFit="true"></GridColumn>
                        <GridColumn Field="@nameof(Pedidos.UNID)" HeaderText="Unidad" AutoFit="true"></GridColumn>
                        <GridColumn Field="@nameof(Pedidos.DESPACHO)" HeaderText="Despacho" AutoFit="true"></GridColumn>
                        <GridColumn Field="@nameof(Pedidos.SERIE)" HeaderText="Serie" AutoFit="true"></GridColumn>
                        <GridColumn Field="@nameof(Pedidos.LOTE)" HeaderText="Lote" AutoFit="true"></GridColumn>
                        <GridColumn Field="@nameof(Pedidos.CG_DEP)" HeaderText="Deposito" AutoFit="true">
                            <Template>
                                @{
                                    var ped = (context as Pedidos);
                                    if (depositos.Any(c => c.CG_DEP == ped.CG_DEP))
                                    {
                                        <span>@depositos.Where(c => c.CG_DEP == ped.CG_DEP).FirstOrDefault().DES_DEP.Trim()</span>

                                    }
                                }
                            </Template>
                        </GridColumn>
                        <GridColumn Field="@nameof(Pedidos.PENDIENTEOC)" HeaderText="Stock" EditType="EditType.NumericEdit" AutoFit="true"></GridColumn>
                        <GridColumn Field="@nameof(Pedidos.REGISTRO)" IsPrimaryKey="true" HeaderText="ID" Visible="false"></GridColumn>
                    </GridColumns>

                </SfGrid>
            </div>
        </div>
    </div>

    @if (PopupBuscadorStockVisible)
    {
        <BuscadorEmergenteResumenStock @ref="BuscadorEmergenteRS" DataSource="@Items" 
                                       Columnas="@(new string[] { "CG_ART", "STOCK", "CG_DEP", "DEPOSITO", "SERIE", "LOTE", "DESPACHO"})"
                                       OnObjetoSeleccionado="@(async(r)=> await OnResumenStockSelected(r))"/>
    }


    @*<BuscadorEmergente TItem="Pedidos" @ref="BuscadorProducto" Titulo=@tituloBuscador
                       DataSource="@DataSource" Columnas="@(new string[] { "CG_ART", "DES_ART"})"
                       OnObjetoSeleccionado="@(async (p)=> await OnSelectedItem(p))" />*@

}

<style>
    /*    #dialogo {
        min-height: 400px;
    }*/

    .row-red {
        background-color: red;
    }

    #gridEditStock_dialogEdit_wrapper {
        top: 131px !important;
    }

    .e-grid .e-gridcontent .e-rowcell.rojo {
        background-color: #e3165b;
    }
</style>