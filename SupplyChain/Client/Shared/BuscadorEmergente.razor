@using Syncfusion.Blazor.Navigations 
@using Syncfusion.Blazor.Buttons

@typeparam TItem
@inherits BuscadorEmergenteBase<TItem>




<SfDialog Height="@Height" Width="@Width" Target="@Target" ShowCloseIcon="true" @bind-Visible="@Visible"
          IsModal="@IsModal" EnableResize="false">
    <SfSpinner @ref="@sfSpinner" @bind-Visible="@SpinnerVisible" Size="80" Label="Cargando..." Type="SpinnerType.Fabric">
    </SfSpinner>
    <DialogEvents Closed="OnAfterDialogClosed" OnOpen="OnAfterDialogOpned"></DialogEvents>
    <DialogTemplates>
        <Header>
            <div class="e-dlg-header-titulo">@Titulo</div>
        </Header>
        <Content>
            @if (DataSource is null)
            {
                if (Visible == true)
                {
                    visibliSpinner = true;

                }
            }
            else if (DataSource.Count() == 0)
            {
                <p class="text-active">Sin Datos</p>
            }
            else
            {
                <div class="dialogContent">
                    <div class="row">
                        <div class="content-wrapper">
                            <div class="col-12">
                                <SfGrid @ref="@Grid" DataSource="@DataSource" AllowPaging="@HabilitarPaginacion"
                                        AllowFiltering="true" TValue="TItem"
                                        AllowResizing="true" GridLines="GridLine.Both" RowHeight="20" Height="@HeightGrid"
                                        AllowReordering="true" AllowExcelExport="true"
                                        AllowSelection="true" AllowSorting="true" AllowTextWrap="true" EnableHover="true" Width="100%"
                                        ShowColumnMenu="true" EnableVirtualization="false">
                                    @*<GridFilterSettings ShowFilterBarStatus="true" Type="Syncfusion.Blazor.Grids.FilterType.FilterBar"
                                        Operators="@(new Operator[] { Operator.Contains })"
                                        Mode="FilterBarMode.Immediate"></GridFilterSettings>*@<GridFilterSettings>
                                            <GridFilterColumns>
                                                @if (Columnas.AsQueryable().Any(col => col == "CG_ART"))
                                                {
                                                <GridFilterColumn Field="CG_ART" MatchCase=false
                                                                  Operator="Syncfusion.Blazor.Operator.Contains" Predicate="and" Value="@filterCG_ART"></GridFilterColumn>
                                            }
                                                
                                                @if (Columnas.AsQueryable().Any(col => col == "DESPACHO"))
                                                {
                                                    <GridFilterColumn Field="DESPACHO" MatchCase=false
                                                                    Operator="Syncfusion.Blazor.Operator.Contains" Predicate="and" Value="@filterDESPACHO"></GridFilterColumn>
                                                }                    
                                                                  
                                            </GridFilterColumns>
                                        </GridFilterSettings>
                                    @*@if (Columnas.AsQueryable().Any(col => col == "DESPACHO"))
                                    {
                                        <GridFilterSettings>
                                            <GridFilterColumns>
                                                <GridFilterColumn Field="DESPACHO" MatchCase=false
                                                                  Operator="Syncfusion.Blazor.Operator.Contains" Predicate="OR" Value="@filterDESPACHO"></GridFilterColumn>
                                            </GridFilterColumns>
                                        </GridFilterSettings>
                                    }*@
                                    <GridPageSettings PageCount="20" PageSize="10" PageSizes="true"></GridPageSettings>
                                    <GridSelectionSettings Type="@TipoSeleccion"></GridSelectionSettings>
                                    <GridEvents TValue="TItem" OnLoad="@(async(a)=>await OnLoadGrid(a))"
                                                OnToolbarClick="@((a)=> ToolbarClick(a))"
                                                OnDataBound="@(async(a)=>await OnDataBoundGrid(a))"
                                                DataBound="@(async()=>await DataBoundGrid())"
                                                RowSelected="GetSelectedRecords"
                                                OnRecordDoubleClick="EnviarObjetoSeleccionado">

                                    </GridEvents>
                                    <GridColumns>
                                        @{
                                            object itemfinal = DataSource.FirstOrDefault();
                                            System.Reflection.PropertyInfo[] propiedades = itemfinal.GetType().GetProperties();

                                            foreach (string col in Columnas)
                                            {
                                                if (propiedades.Any(p => p.Name.ToUpper() == col.ToUpper()))
                                                {
                                                    var propiedad = propiedades.Where(p => p.Name.ToUpper() == col.ToUpper()).FirstOrDefault();

                                                    //obtener el atributo para mostrar el nombre de columna
                                                    string nameColumn = propiedad.Name;
                                                    var tipoDate = propiedad.PropertyType == typeof(DateTime) ? propiedad.GetValue(itemfinal, null) : null;
                                                    var attr = propiedad.GetCustomAttributesData().FirstOrDefault(a => a.AttributeType.Name.Equals("ColumnaGridViewAtributo"));
                                                    nameColumn = attr?.NamedArguments.FirstOrDefault(a => a.MemberName.Equals("Name")).TypedValue.Value.ToString();
                                                    if (tipoDate != null)
                                                    {
                                                        <GridColumn Field="@propiedad.Name" HeaderText="@nameColumn" Type="ColumnType.Date"
                                                                    Format="dd/MM/yyyy" Width="120px"
                                                                    FilterSettings="@(new FilterSettings { Operator = Syncfusion.Blazor.Operator.Contains })">
                                                        </GridColumn>
                                                    }
                                                    else
                                                    {
                                                        if (col.ToUpper() == "CG_ART")
                                                        {
                                                            <GridColumn Field="@propiedad.Name" Width="220px"
                                                                        FilterSettings="@(new FilterSettings { Operator = Syncfusion.Blazor.Operator.Contains })"></GridColumn>
                                                        }
                                                        else if (col.ToUpper() == "DES_ART")
                                                        {
                                                            <GridColumn Field="@propiedad.Name" Width="220px"
                                                                        FilterSettings="@(new FilterSettings { Operator = Syncfusion.Blazor.Operator.Contains })"></GridColumn>
                                                        }
                                                        else
                                                        {

                                                            <GridColumn Field="@propiedad.Name" Width="150px"
                                                                        FilterSettings="@(new FilterSettings { Operator = Syncfusion.Blazor.Operator.Contains })"></GridColumn>
                                                        }
                                                    }

                                                }
                                            }
                                        }

                                    </GridColumns>

                                </SfGrid>
                            </div>
                        </div>
                        <div>

                        </div>
                    </div>


                </div>
            }

        </Content>
        <FooterTemplate>
            <hr />
            @if (MostrarVerMas)
            {
                <button id="verButton" @onclick="@(async()=> await Buscar())"
                        class="e-control e-btn e-info" data-ripple="true">
                    Ver +
                </button>
            }

            <button id="sendButton" @onclick="@EnviarObjetoSeleccionado" class="e-control e-btn e-info" data-ripple="true">Aceptar</button>
        </FooterTemplate>

    </DialogTemplates>
    @*<DialogEvents OnOpen="@BeforeDialogOpen" Closed="@DialogClosed"></DialogEvents>*@
</SfDialog>


