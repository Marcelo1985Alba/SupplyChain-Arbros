@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Layouts
@using SupplyChain.Client.Shared.BuscadorCliente
@using SupplyChain.Client.Shared.BuscadorPedidos

@inherits FormRemitoBase



<SfDialog @bind-Visible="Show" IsModal="true" Width="70%" Height="680px" ShowCloseIcon="true">
    <DialogEvents Closed="OnCerrarDialog"></DialogEvents>
    <DialogAnimationSettings Effect="DialogEffect.FadeZoom" Duration="200"></DialogAnimationSettings>
    <DialogTemplates>
        <Header>
            @if (string.IsNullOrEmpty(Pedido.REMITO))
            {
                <div class="e-dlg-header-titulo">Nuevo Remito</div>
            }
            else
            {
                <div class="e-dlg-header-titulo">Remito:&nbsp;&nbsp;@Pedido.REMITO&nbsp;&nbsp;-&nbsp;&nbsp;@Pedido.DES_CLI</div>
            }
        </Header>
        <Content>
            <EditForm id="formPedido" Model="@Pedido" OnValidSubmit="@(async()=> await Guardar())">
                <SfSpinner @bind-Visible="@spinerVisible" Label="Guardando..." Type="SpinnerType.Fabric"></SfSpinner>
                <ObjectGraphDataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-row">
                    <div class="form-group col-md-2">
                        <label class="">Cod. Cliente:</label>
                        <SfNumericTextBox ID="CG_CLI" @bind-Value="@(Pedido.CG_CLI)" ShowSpinButton="false" Readonly="false"
                                          OnInput="@(e => Cg_cli_Changed(e))"></SfNumericTextBox>
                    </div>
                    <div class="form-group col-md-4">
                        <label class="">Cliente:</label>
                        <SfTextBox CssClass="customClass" ID="Cliente" @bind-Value="@(Pedido.DES_CLI)" Input="@(e => Des_cli_Changed(e))" Readonly="false"></SfTextBox>
                    </div>
                    <div class="form-group col-md-1 mt-4">
                        <SfButton IconCss="fa fa-search" CssClass="e-round e-info" OnClick="@(async ()=> await BuscarClientes())"
                                  HtmlAttributes="@HtmlAttribute"></SfButton>
                    </div>
                    <div class="form-group col-md-2">
                        <label class="">Moneda:</label>
                        <SfDropDownList TValue="string" TItem="string" DataSource="Monedas" Readonly="true"
                                        @bind-Value="Pedido.MONEDA">
                            <DropDownListEvents TItem="string" TValue="string" ValueChange="@CambioMoneda"></DropDownListEvents>
                        </SfDropDownList>
                    </div>
                    <div class="form-group col-md-1">
                        <label class="">TC:</label>
                        <SfNumericTextBox ID="TC" @bind-Value="@(Pedido.VA_INDIC)" ShowSpinButton="false" Decimals="2" Readonly="true"></SfNumericTextBox>
                    </div>
                </div>
                <div class="form-row">

                    <div class="form-group col-md-4">
                        <label class="">Condicion de Pago:</label>
                        <SfDropDownList TValue="int" TItem="vCondicionesPago" @bind-Value="Pedido.CG_CONDICION_PAGO"
                                        DataSource="CondicionesPagos">
                            <DropDownListFieldSettings Text="DESCRIPCION" Value="Id"></DropDownListFieldSettings>
                        </SfDropDownList>
                    </div>
                    <div class="form-group col-md-8">
                        <label class="">Condicion de Entrega:</label>
                        <SfDropDownList TValue="int" TItem="vCondicionesEntrega" @bind-Value="Pedido.CG_COND_ENTREGA"
                                        DataSource="CondicionesEntrega">
                            <DropDownListFieldSettings Text="OBSERVACIONES" Value="Id"></DropDownListFieldSettings>
                        </SfDropDownList>
                    </div>

                </div>
                <div class="form-row">

                    <div class="form-group col-md-6">
                        <label class="">Direccion de Entrega:</label>
                        <SfDropDownList TValue="string" TItem="string" DataSource="@DireccionesEntregas"
                                        @bind-Value="Pedido.DIRENT"></SfDropDownList>
                    </div>
                    <div class="form-group col-md-4">
                        <label class="">Transporte:</label>
                        <SfDropDownList TValue="int" TItem="vTransporte" DataSource="@Transportes"
                                        @bind-Value="Pedido.CG_TRANS">
                            <DropDownListFieldSettings Value="Id" Text="DESCRIPCION"></DropDownListFieldSettings>
                        </SfDropDownList>
                    </div>
                </div>

                <div class="form-row">

                    <div class="form-group col-md-4">
                        <label class="">Bultos:</label>
                        <SfTextBox CssClass="customClass" ID="Bultos" @bind-Value="@(Pedido.BULTOS)" Width="250" Readonly="false"></SfTextBox>
                    </div>
                    <div class="form-group col-md-8">
                        <label class="">Monto:</label>
                        <SfTextBox CssClass="customClass" ID="Monto" @bind-Value="@(Pedido.MONTO)" Readonly="false"></SfTextBox>
                    </div>

                </div>

                <div class="row">
                    <div class="col-12">
                        <SfToast ID="toast_default" @ref="ToastObj">
                            <ToastPosition X="Center" Y="Top"></ToastPosition>
                        </SfToast>

                        <SfGrid AllowReordering="true" AllowResizing="true" AllowTextWrap="false" Height="120px"
                                @ref="refGridItems" DataSource="@Pedido.Items" Width="100%" ID="grdItemsPresup"
                                AllowSorting="true" AllowPaging="false" GridLines="GridLine.Both">
                            <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Single"></GridSelectionSettings>
                            @*<GridPageSettings PageSize="10" PageSizes="true"></GridPageSettings>*@
                            <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" ShowConfirmDialog="false"
                                              Mode="@Syncfusion.Blazor.Grids.EditMode.Batch">
                                <GridEvents TValue="Pedidos" OnBatchDelete="BatchDeleteHandler"
                                            CellSaved="CellSavedHandler" OnBatchAdd="BatchAddHandler" OnBatchSave="BatchSaveHandler"></GridEvents>
                            </GridEditSettings>
                            <GridColumns>
                                <GridColumn Field=@nameof(Pedidos.Id) IsPrimaryKey="true" Width="3"></GridColumn>
                                <GridColumn Field=@nameof(Pedidos.CG_ART) AllowEditing="false" HeaderText="Producto" TextAlign="TextAlign.Left" Width="130px"></GridColumn>
                                <GridColumn Field=@nameof(Pedidos.DES_ART) AllowEditing="false" HeaderText="Descripcion" TextAlign="TextAlign.Left" Width="250px"></GridColumn>
                                <GridColumn Field=@nameof(Pedidos.STOCK) HeaderText="Cantidad" TextAlign="TextAlign.Left" Width="100px">
                                    <EditTemplate Context="detalle">
                                        @{
                                            var value = (detalle as Pedidos);
                                            <SfNumericTextBox @bind-Value="value.STOCK" Decimals="0" ShowSpinButton="false"></SfNumericTextBox>
                                        }
                                    </EditTemplate>
                                </GridColumn>
                                <GridColumn Field=@nameof(Pedidos.IMPORTE1) HeaderText="Precio Unit." TextAlign="TextAlign.Left" Width="100px"
                                            EditType="EditType.NumericEdit" Format="N2">
                                    <EditTemplate Context="detalle">
                                        @{
                                            var value = (detalle as Pedidos);
                                            <SfNumericTextBox @bind-Value="value.IMPORTE1" Decimals="2" ShowSpinButton="false"></SfNumericTextBox>
                                        }
                                    </EditTemplate>
                                </GridColumn>
                                <GridColumn Field=@nameof(Pedidos.IMPORTE2) AllowEditing="false" Format="C2"
                                            HeaderText="Neto" TextAlign="TextAlign.Left" Width="100px">
                                    <Template Context="detalle">
                                        @{
                                            var value = (detalle as Pedidos);
                                            var res = Math.Abs((decimal)value.STOCK * (decimal)value.IMPORTE1);
                                            value.IMPORTE2 = res;
                                            <span> @value.IMPORTE2 </span>
                                        }
                                    </Template>
                                </GridColumn>
                                <GridColumn Field="@nameof(Pedidos.IMPORTE4)" Format="N2" HeaderText="Total" Width="100"></GridColumn>
                                <GridColumn Field="@nameof(Pedidos.LOTE)" HeaderText="Lote" Width="170"></GridColumn>
                                <GridColumn Field="@nameof(Pedidos.SERIE)" HeaderText="Serie" Width="150"></GridColumn>
                                <GridColumn Field="@nameof(Pedidos.DESPACHO)" HeaderText="Presion" Width="150"></GridColumn>
                                <GridColumn Field="@nameof(Pedidos.OBSERITEM)" HeaderText="Observaciones" Width="350"></GridColumn>
                            </GridColumns>
                        </SfGrid>
                    </div>


                </div>


                <SfSpinner @ref="@refSpinnerCli" Size="50" @bind-Visible="@SpinnerVisible"
                           Label="Buscando ..." Type="SpinnerType.Fabric">
                </SfSpinner>

                <ClientesDialog @ref="refClienteDialog" PopupBuscadorVisible="@popupBuscadorVisibleCliente"
                                OnObjectSelected="@ClienteExternoSelected" Cg_Cli="@Pedido.CG_CLI" Des_Cli="@Pedido.DES_CLI"
                                OnCerrarDialog="@(()=> popupBuscadorVisibleCliente = false)"></ClientesDialog>



                <ValidationSummary />

            </EditForm>
            
            
        </Content>
        <FooterTemplate>
            <div class="row">
                <div class="col-3 text-left">
                    <span class="text-muted font-weight-bold">Cantidad: @Pedido.Items.Count()</span>
                </div>
                <div class="col-9 text-right">
                    @if (!string.IsNullOrEmpty(Pedido.REMITO))
                    {
                        <SfButton Content="Imprimir" HtmlAttributes="@HtmlAttribute" CssClass="e-success"
                                  OnClick="@(async()=>await Imprimir())" IconCss="fa fa-print"></SfButton>
                    }

                    <SfButton IsPrimary="true" Content="Guardar" IconCss="fa fa-save" HtmlAttributes="@HtmlAttributeSubmit" Disabled="@BotonGuardarDisabled"></SfButton>
                    <SfButton Content="Cancel" HtmlAttributes="@HtmlAttribute" OnClick="@(async()=>await Hide())" IconCss="fa fa-window-close-o"></SfButton>
                </div>
            </div>
            
        </FooterTemplate>
    </DialogTemplates>
</SfDialog>

<PedidosEstados @ref="@refPresupuestosDialog" CompararCliente="true" Cg_Cli_Comparar="@Pedido.CG_CLI" 
                PopupBuscadorVisible="@popupBuscadorVisiblePresupuestos"
                    OnCerrarDialog="@(() => popupBuscadorVisiblePresupuestos = false)"
                    OnObjectSelected="@PresupuestoSelected"></PedidosEstados>



<style>

    #toolbar-form-pedido {
        border: 0px solid rgb(173, 255, 47) !important;
    }

        #toolbar-form-pedido .e-toolbar-item {
            /*background: #add8e6;*/
            /*border: 1px solid #5a70cc;*/
        }

        #toolbar-form-pedido .e-tbar-btn {
            background: #398bf7;
            border-radius: 10%;
            /*border: 1px solid #5a70cc;*/
        }

        #toolbar-form-pedido .e-toolbar-item:hover {
            background: #619ded;
            /*border: 1px solid #5a70cc;*/
        }

        #toolbar-form-pedido .e-toolbar-items .e-toolbar-item .e-tbar-btn.e-btn {
            min-height: 20px;
        }

            #toolbar-form-pedido .e-toolbar-items .e-toolbar-item .e-tbar-btn.e-btn:hover {
                background-color: #4f70ee;
                border-radius: 10%;
            }


        #toolbar-form-pedido .e-toolbar-items .e-toolbar-item .e-tbar-btn-text {
            color: white;
        }

        #toolbar-form-pedido .e-tbar-btn:focus {
            background: #3d53a8;
            border-color: #eaeaea;
            border-radius: 0;
            color: #000;
        }


    .container-total {
        text-align: right;
    }

    .total-price {
        font-weight: bold;
        font-size: 12px;
    }

    #grdItemsPresup .e-gridheader .e-headercell, .e-grid-min-height .e-gridheader .e-detailheadercell,
    #grdItemsPresup .e-gridheader .e-headercell .e-headercelldiv {
        background-color: #398bf7 !important;
        color: #ffffff !important;
        font-weight: 500 !important;
        font-size: 11px !important;
        padding: .1rem !important;
    }

    #grdItemsPresup .e-gridheader {
        background-color: #398bf7 !important;
        color: #ffffff !important;
        font-weight: 500 !important;
        font-size: 10px !important;
        /*padding: .5rem !important;*/
    }

    #grdItemsPresup .e-row .e-rowcell {
        font-size: 12px !important;
    }
</style>
