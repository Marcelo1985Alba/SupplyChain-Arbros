@layout LoginLayout
@page "/"
@page "/login"

@inject HttpClient Http
@*@inject DatosGlobales DatosGlobales*@
@inject IJSRuntime JsRuntime
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager
@inject ILoginService loginService

<SfToast ID="toast_default" @ref="ToastObj">
    <ToastPosition X="Right" ></ToastPosition>
</SfToast>

@*<div id="targetLogin" class="dialogLogin">
    <SfDialog Target="#targetLogin" Width="100%" Height="100%" IsModal="false"
              ShowCloseIcon="false" CloseOnEscape="false"
              @bind-Visible="@IsDialogLoginVisible">
        <DialogTemplates>
            <Header>
                @*<img src="/Logo.png" />*@
                <!--&nbsp;&nbsp;Supply Chain

            </Header>
            <Content>
                <br />
                <div style="margin-top:30px;margin-left:40px;margin-right:40px">
                    <SfTextBox Placeholder="Usuario" @bind-Value="@usuario"
                               ShowClearButton="true" Type="InputType.Text"></SfTextBox>
                </div>
                <div style="margin-top:30px;margin-left:40px;margin-right:40px">
                    <SfTextBox Placeholder="Contraseña" @bind-Value="@contras"
                               ShowClearButton="true" Type="InputType.Password"></SfTextBox>
                </div>
                <SfSpinner @ref="SpinnerLogin" />
            </Content>
        </DialogTemplates>
        <DialogButtons>
            <DialogButton Content="INGRESAR" IsPrimary="true" OnClick="@LoginDialogOk" />
        </DialogButtons>
    </SfDialog>
</div>-->

<section id="wrapper" class="login-register login-sidebar" style="background-image:url(./Imagenes/login-register.jpg);">
    <div class="login-box card">
        <div class="card-body">
            <EditForm Model="@usuarioLogin" OnSubmit="@(async() => await LoginDialogOk())">
                <a href="javascript:void(0)" class="text-center db">
                    <img src="./logo_aerre.jpg" class="img-thumbnail" alt="Home" /><br />
                    @*<img src="../assets/images/logo-text.png" alt="Home" />*@
                </a>
                <div class="form-group m-t-40">
                    <div class="col-xs-12">
                        <label>Usuario</label>
                        <Syncfusion.Blazor.Inputs.SfTextBox ShowClearButton="true" Placeholder="Ingresar Usuario"
                                                            @bind-Value="@usuarioLogin.Usuario"
                                                            FloatLabelType="FloatLabelType.Never" Type="InputType.Text" />
                    </div>
                </div>
                <SfSpinner @bind-Visible="SpinnerVisible" Label="Iniciando Sesion..." Size="60"></SfSpinner>
                <div class="form-group">
                    <div class="col-xs-12">
                        <label>Contraseña</label>
                        <input class='e-input' type="password" placeholder='Enter Password' @bind-value="@usuarioLogin.Contras" />
                    </div>
                </div>

                <div class="form-group text-center m-t-20">
                    <div class="col-xs-12">
                        <button class="btn btn-info btn-lg btn-block text-uppercase btn-rounded" type="submit">Ingresar</button>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</section>

@*else
    {
        //  L L A M A R   A L    M E N U
        <div class="pt-5 mt-5">
            <p>Cargar Menu</p>
        </div>

    }*@

@code {
    protected string Usuario;
    protected string usuario = "";
    protected string contras = "";
    protected bool IsDialogLoginVisible { get; set; } = true;
    protected SfToast ToastObj;
    private bool SpinnerVisible = false;
    Usuarios usuarioLogin = new Usuarios();

    protected async override Task OnInitializedAsync()
    {
        // Recoge usuario
        Usuario = await JsRuntime.InvokeAsync<string>("sessionStorage.getItem", "Usuario");
        StateHasChanged();
    }

    private async Task LoginDialogOk(/*Object args*/)
    {
        if (usuarioLogin.Usuario != "" && usuarioLogin.Contras != "")
        {
            SpinnerVisible = true;

            var xUser = await Http.GetFromJsonAsync<Usuarios>($"api/Usuarios/{usuarioLogin.Usuario}/{usuarioLogin.Contras}");
            if (xUser != null)
            {
                await JsRuntime.InvokeVoidAsync("sessionStorage.setItem", "Usuario", xUser.Usuario);

                //IsDialogLoginVisible = false;
                await this.ToastObj.Show(new ToastModel
                {
                    Title = $"Bienvenid@ {xUser.Usuario}!",
                    Content = "Usuario y contraseña correcta.",
                    CssClass = "e-toast-success",
                    Icon = "e-success toast-icons"
                });

                await loginService.Login(xUser.Usuario);
                navigationManager.NavigateTo("/index");
            }
            else
            {
                await this.ToastObj.Show(new ToastModel
                {
                    Title = "Error!",
                    Content = "Usuario o contraseña incorrecta.",
                    CssClass = "e-toast-danger",
                    Icon = "e-error toast-icons"
                });
            }

            SpinnerVisible = false;
        }
        else
        {
            await this.ToastObj.Show(new ToastModel
            {
                Title = "Aviso!",
                Content = "Debe indicar usuario y contraseña.",
                CssClass = "e-toast-warning",
                Icon = "e-warning toast-icons"
            });
        }

    }
}

<style>
    .dialogLogin {
        position: relative;
        height: 410px;
        max-height: 410px;
        width: 30%;
        margin-top: 100px;
        margin-right: 35%;
        margin-left: 180px;
        margin-bottom: auto;
    }
    /*
Template Name: Admin pro Admin
Author: Wrappixel
Email: niravjoshi87@gmail.com
File: scss
*/
    /*
Template Name: Admin Pro Admin
Author: Wrappixel
Email: niravjoshi87@gmail.com
File: scss
*/
    /*Theme Colors*/
    /*bootstrap Color*/
    /*Light colors*/
    /*Normal Color*/
    /*Extra Variable*/
    /*******************
Login register and recover password Page
******************/
    .login-register {
        background-size: cover;
        background-repeat: no-repeat;
        background-position: center center;
        height: 100%;
        width: 100%;
        padding: 10% 0;
        position: fixed;
    }

    .login-box {
        width: 400px;
        margin: 0 auto;
    }

        .login-box .footer {
            width: 100%;
            left: 0px;
            right: 0px;
        }

        .login-box .social {
            display: block;
            margin-bottom: 30px;
        }

    #recoverform {
        display: none;
    }

    .login-sidebar {
        padding: 0px;
        margin-top: 0px;
    }

        .login-sidebar .login-box {
            right: 0px;
            position: absolute;
            height: 100%;
        }

</style>
