@page "/estadistica-ventas"
@using Syncfusion.Blazor.PivotView
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.Charts
@inject HttpClient Http


<SfSpinner @ref="refSpinner" Label="Cargando..." Type="SpinnerType.Fabric" @bind-Visible="@VisibleSpinner"></SfSpinner>

@*<div class="row form-inline">
    <div class="col-3">
        <label class="">Tipo Grafico:</label>
    </div>
    <div class="col-9">
        <SfDropDownList TValue="Syncfusion.Blazor.PivotView.ChartSeriesType" TItem="DropDownData" DataSource="@ChartTypes" @bind-Value="@ChartType">
            <DropDownListFieldSettings Text="Name" Value="Value"></DropDownListFieldSettings>
        </SfDropDownList>
    </div>

</div>*@



    <div class="row">
        <div class="col-12">
            <SfChart Title="Tiempos Productivos" Width="100%">
                <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
                <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category"
                                   EdgeLabelPlacement="EdgeLabelPlacement.Shift">
                </ChartPrimaryXAxis>

                <ChartPrimaryYAxis LabelFormat="{value} hs">
                    <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
                    <ChartAxisLabelStyle Color="transparent"></ChartAxisLabelStyle>
                    <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
                    <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
                </ChartPrimaryYAxis>
                <ChartSeriesCollection>
                    <ChartSeries DataSource="@DataVentasAnualesDolares" XName="XSerieName" YName="YSerieName" Name="CM1"
                                 Type="Syncfusion.Blazor.Charts.ChartSeriesType.Column">
                        <ChartMarker>
                            <ChartDataLabel Visible="false" Position="Syncfusion.Blazor.Charts.LabelPosition.Top">
                                <ChartDataLabelFont FontWeight="600" Color="#ffffff"></ChartDataLabelFont>
                            </ChartDataLabel>
                        </ChartMarker>
                    </ChartSeries>
                </ChartSeriesCollection>
                <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
            </SfChart>
        </div>

    </div>

<style>
    .e-pivotview {
        min-height: 200px;
    }

    html, body {
        height: 100%;
    }
</style>
@code{
    [CascadingParameter] public MainLayout MainLayout { get; set; }
    protected SfSpinner refSpinner;
    protected bool VisibleSpinner = false;
    public List<EstadVenta> DataEstad { get; set; }

    public Syncfusion.Blazor.PivotView.ChartSeriesType ChartType = Syncfusion.Blazor.PivotView.ChartSeriesType.Column;
    public string[] DrilledMembers = new string[] { "2016.0" };
    public PivotChartTooltipSettings pivotChartTooltipSettings = new PivotChartTooltipSettings()
    {
        Enable = true,
        Border = new PivotChartTooltipBorder() { Width = 1 },
        EnableMarker = true
    };
    public PivotChartLegendSettings pivotChartLegendSettings = new PivotChartLegendSettings()
    {
        Position = PivotChartLegendPosition.Top,
        Visible = true
    };
    List<DropDownData> ChartTypes = new List<DropDownData>() {
        new DropDownData { Name = "Column", Value = Syncfusion.Blazor.PivotView.ChartSeriesType.Column },
        new DropDownData { Name = "Bar", Value = Syncfusion.Blazor.PivotView.ChartSeriesType.Bar },
        new DropDownData { Name = "Line", Value = Syncfusion.Blazor.PivotView.ChartSeriesType.Line },
        new DropDownData { Name = "Spline", Value = Syncfusion.Blazor.PivotView.ChartSeriesType.Spline },
        new DropDownData { Name = "Area", Value =Syncfusion.Blazor.PivotView.ChartSeriesType.Area },
        new DropDownData { Name = "SplineArea", Value = Syncfusion.Blazor.PivotView.ChartSeriesType.SplineArea },
        new DropDownData { Name = "StepLine", Value =Syncfusion.Blazor.PivotView. ChartSeriesType.StepLine },
        new DropDownData { Name = "StepArea", Value = Syncfusion.Blazor.PivotView.ChartSeriesType.StepArea },
        new DropDownData { Name = "StackingColumn", Value = Syncfusion.Blazor.PivotView.ChartSeriesType.StackingColumn },
        new DropDownData { Name = "StackingBar", Value = Syncfusion.Blazor.PivotView.ChartSeriesType.StackingBar },
        new DropDownData { Name = "StackingArea", Value = Syncfusion.Blazor.PivotView.ChartSeriesType.StackingArea },
        new DropDownData { Name = "StackingColumn100", Value = Syncfusion.Blazor.PivotView.ChartSeriesType.StackingColumn100 },
        new DropDownData { Name = "StackingBar100", Value = Syncfusion.Blazor.PivotView.ChartSeriesType.StackingBar100 },
        new DropDownData { Name = "StackingArea100", Value = Syncfusion.Blazor.PivotView.ChartSeriesType.StackingArea100 },
        new DropDownData { Name = "Scatter", Value = Syncfusion.Blazor.PivotView.ChartSeriesType.Scatter },
        new DropDownData { Name = "Bubble", Value = Syncfusion.Blazor.PivotView.ChartSeriesType.Bubble },
        new DropDownData { Name = "Polar", Value = Syncfusion.Blazor.PivotView.ChartSeriesType.Polar },
        new DropDownData { Name = "Radar", Value = Syncfusion.Blazor.PivotView.ChartSeriesType.Radar },
        new DropDownData { Name = "Pareto", Value = Syncfusion.Blazor.PivotView.ChartSeriesType.Pareto },
        new DropDownData { Name = "Pie", Value = Syncfusion.Blazor.PivotView.ChartSeriesType.Pie },
        new DropDownData { Name = "Doughnut", Value = Syncfusion.Blazor.PivotView.ChartSeriesType.Doughnut },
        new DropDownData { Name = "Funnel", Value = Syncfusion.Blazor.PivotView.ChartSeriesType.Funnel },
        new DropDownData { Name = "Pyramid", Value = Syncfusion.Blazor.PivotView.ChartSeriesType.Pyramid }
    };
    public class DropDownData
    {
        public string Name { get; set; }
        public Syncfusion.Blazor.PivotView.ChartSeriesType Value { get; set; }
    }

    public class ChartData
    {
        public string XSerieName { get; set; }
        public double YSerieName { get; set; }
    }

    public List<ChartData> DataVentasAnualesDolares { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        MainLayout.Titulo = "Estadistica de Ventas";
        VisibleSpinner = true;
        this.DataEstad = await Http.GetFromJsonAsync<List<EstadVenta>>("api/EstadisticaVentas/GetFacturacionAsync");

        DataVentasAnualesDolares = DataEstad.Where(d=> d.AnoFactura != null).GroupBy(g=> new { g.AnoFactura })
            .Select(d=> new ChartData() 
            { 
                XSerieName = Convert.ToString(d.Key.AnoFactura), 
                YSerieName = Convert.ToDouble(d.Sum(p => p.DolaresFactura))
            }).ToList();

        VisibleSpinner = false;
    }
}