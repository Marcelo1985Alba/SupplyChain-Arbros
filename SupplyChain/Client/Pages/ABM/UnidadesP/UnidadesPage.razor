@page "/Abms/unidades"
@using EditMode = Syncfusion.Blazor.PivotView.EditMode
@using SelectionType = Syncfusion.Blazor.Grids.SelectionType
@using Syncfusion.Blazor.Buttons
@inherits UnidadPageBase

<div class="row">
    <div class="col-12">
        <ComboVistasGrilla AppName="@APPNAME" StateApp="@state"
                           OnReiniciar="async () => await OnReiniciarGrilla()"
                           OnVistaSelected="async v => await OnVistaSeleccionada(v)"/>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <SfToast ID="toast_default" @ref="ToastObj">
            <ToastPosition X="Center" Y="Top"></ToastPosition>
        </SfToast>
        <SfGrid AllowReordering="true" ShowColumnChooser="true" ShowColumnMenu="true" AllowResizing="true"
                @ref="refGrid" DataSource="@unidades" Width="100%" Toolbar="Toolbaritems"
                AllowExcelExport="true" AllowGrouping="true" ID="grdCeldas" AllowFiltering="true"
                AllowSorting="true" AllowPaging="true" GridLines="GridLine.Both">
            <GridSelectionSettings CheckboxOnly="true" Type="SelectionType.Multiple"></GridSelectionSettings>
            <GridPageSettings PageSize="10" PageSizes="true"></GridPageSettings>
            <GridEvents OnActionBegin="OnActionBeginHandler" OnToolbarClick="OnToolbarHandler"
                        OnActionComplete="OnActionCompleteHandler" TValue="Unidades">
            </GridEvents>
            <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>
            <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" AllowEditOnDblClick="true"
                              ShowDeleteConfirmDialog="false" Mode="@Syncfusion.Blazor.Grids.EditMode.Dialog">
            </GridEditSettings>
            <GridColumns>
                <GridColumn Type="ColumnType.CheckBox" Width="50"></GridColumn>
                <GridColumn Field="@nameof(Unidades.Id)" HeaderText="Id" TextAlign="TextAlign.Left" IsPrimaryKey="true" Width="200px"></GridColumn>
                <GridColumn Field="@nameof(Unidades.DES_UNID)" HeaderText="Descripcion" TextAlign="TextAlign.Left" Width="200"></GridColumn>
                <GridColumn Field="@nameof(Unidades.TIPOUNID)" HeaderText="tipo" TextAlign="TextAlign.Left" Width="200"></GridColumn>
                <GridColumn Field="@nameof(Unidades.CG_DENBASICA)" HeaderText="den basica" TextAlign="TextAlign.Left" Width="200"></GridColumn>
                <GridColumn Field="@nameof(Unidades.CODIGO)" HeaderText="Codigo" TextAlign="TextAlign.Left" Width="200"></GridColumn>
            </GridColumns>
            <SfSpinner @ref="refSpinner" Type="SpinnerType.Fabric" Size="50" @bind-Visible="@SpinnerVisible"></SfSpinner>
        </SfGrid>
    </div>

    @if (popupFormVisible)
    {
        <FormUnidades unidades="unidadSeleccionada" Show="popupFormVisible" OnEliminar="@(async p => await Guardar(p))"
                      OnCerrar="OnCerrarDialog" OnGuardar="@(async p => await Guardar(p))">
        </FormUnidades>
    }
</div>

<style>
    .form-group.col-md-6 {
        width: 200px;
    }

    label.e-float-text {
        position: relative;
        padding-left: 0;
        top: 10%;
    }

    .e-input-group.e-control-wrapper.customClass {
        color: black;
        background-color: lightblue;
    }
</style>

@code {

    public string edit = "Syncfusion.Blazor.PivotView.EditMode.Normal";
    public bool DblClick = true;
    public bool CommandColumnsClick;

    public EditMode SelectedMode = EditMode.Normal;

    public void OnRadioChange(ChangeArgs<string> args)
    {
        if (args.Value == "inline")
        {
            DblClick = true;
            CommandColumnsClick = false;
            SelectedMode = EditMode.Normal;
        }
        else if (args.Value == "batch")
        {
            DblClick = true;
            CommandColumnsClick = false;
            SelectedMode = EditMode.Batch;
        }
        else if (args.Value == "dialog")
        {
            DblClick = true;
            CommandColumnsClick = false;
            SelectedMode = EditMode.Dialog;
        }
        else
        {
            CommandColumnsClick = true;
        }
    }

}